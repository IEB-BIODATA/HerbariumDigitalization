# Generated by Django 4.1.7 on 2023-03-13 16:41

import apps.digitalization.storage_backends
import apps.digitalization.validators
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VouchersView',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('file', models.CharField(blank=True, max_length=300, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('voucher_state', models.CharField(blank=True, max_length=300, null=True)),
                ('collection_code', models.CharField(blank=True, max_length=300, null=True)),
                ('otherCatalogNumbers', models.CharField(blank=True, max_length=13, null=True)),
                ('catalogNumber', models.IntegerField(blank=True, null=True)),
                ('recordedBy', models.CharField(blank=True, max_length=300, null=True)),
                ('recordNumber', models.CharField(blank=True, max_length=13, null=True)),
                ('organismRemarks', models.CharField(blank=True, max_length=300, null=True)),
                ('scientificName', models.CharField(blank=True, max_length=300, null=True)),
                ('locality', models.CharField(blank=True, max_length=300, null=True)),
                ('verbatimElevation', models.IntegerField(blank=True, null=True)),
                ('georeferencedDate', models.DateTimeField(blank=True, null=True)),
                ('decimalLatitude', models.FloatField(blank=True, null=True)),
                ('decimalLongitude', models.FloatField(blank=True, null=True)),
                ('identifiedBy', models.CharField(blank=True, max_length=100, null=True)),
                ('dateIdentified', models.CharField(blank=True, max_length=100, null=True)),
                ('decimalLatitude_public', models.FloatField(blank=True, null=True)),
                ('decimalLongitude_public', models.FloatField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, default=3, null=True)),
            ],
            options={
                'db_table': 'vouchers_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiodataCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True)),
                ('catalogNumber', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('qr_generated', models.BooleanField(default=False)),
                ('voucher_state', models.IntegerField(choices=[(0, 'Sin Estado'), (1, 'Encontrado'), (2, 'No Encontrado'), (3, 'En Préstamo'), (4, 'Extraviado'), (5, 'En Préstado Encontrado'), (6, 'Extraviado Encontrado'), (7, 'Digitalizado'), (8, 'Pendiente')], default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'BIODATA Codes',
            },
        ),
        migrations.CreateModel(
            name='ColorProfileFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads/color_profile/', validators=[apps.digitalization.validators.validate_file_size])),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Herbarium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('collection_code', models.CharField(max_length=6)),
                ('institution_code', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name_plural': 'Herbariums',
            },
        ),
        migrations.CreateModel(
            name='PriorityVouchersFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads/priority_vouchers/', validators=[apps.digitalization.validators.validate_file_size])),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('herbarium', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='digitalization.herbarium')),
            ],
            options={
                'verbose_name_plural': 'Priority Vouchers Files',
            },
        ),
        migrations.CreateModel(
            name='VoucherImported',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otherCatalogNumbers', models.CharField(blank=True, max_length=13, null=True)),
                ('catalogNumber', models.IntegerField(blank=True, null=True)),
                ('recordedBy', models.CharField(blank=True, max_length=300, null=True)),
                ('recordNumber', models.CharField(blank=True, max_length=13, null=True)),
                ('organismRemarks', models.CharField(blank=True, max_length=300, null=True)),
                ('locality', models.CharField(blank=True, max_length=300, null=True)),
                ('verbatimElevation', models.IntegerField(blank=True, null=True)),
                ('georeferencedDate', models.DateTimeField(blank=True, null=True)),
                ('decimalLatitude', models.FloatField(blank=True, null=True)),
                ('decimalLongitude', models.FloatField(blank=True, null=True)),
                ('identifiedBy', models.CharField(blank=True, max_length=100, null=True)),
                ('dateIdentified', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, storage=apps.digitalization.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('image_resized_10', models.ImageField(blank=True, null=True, storage=apps.digitalization.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('image_resized_60', models.ImageField(blank=True, null=True, storage=apps.digitalization.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('image_public', models.ImageField(blank=True, null=True, storage=apps.digitalization.storage_backends.PublicMediaStorage(), upload_to='')),
                ('image_public_resized_10', models.ImageField(blank=True, null=True, storage=apps.digitalization.storage_backends.PublicMediaStorage(), upload_to='')),
                ('image_public_resized_60', models.ImageField(blank=True, null=True, storage=apps.digitalization.storage_backends.PublicMediaStorage(), upload_to='')),
                ('image_raw', models.ImageField(blank=True, null=True, storage=apps.digitalization.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('decimalLatitude_public', models.FloatField(blank=True, null=True)),
                ('decimalLongitude_public', models.FloatField(blank=True, null=True)),
                ('point_public', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('priority', models.IntegerField(blank=True, default=3, null=True)),
                ('herbarium', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='digitalization.herbarium')),
                ('occurrenceID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='digitalization.biodatacode')),
                ('scientificName', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.species')),
                ('vouchers_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='digitalization.priorityvouchersfile')),
            ],
            options={
                'verbose_name_plural': 'Vouchers',
            },
        ),
        migrations.CreateModel(
            name='HerbariumMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('herbarium', models.ManyToManyField(to='digitalization.herbarium')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GeneratedPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('terminated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('color_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='digitalization.colorprofilefile')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('herbarium', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='digitalization.herbarium')),
            ],
            options={
                'verbose_name_plural': 'Generated Pages',
            },
        ),
        migrations.AddField(
            model_name='biodatacode',
            name='herbarium',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='digitalization.herbarium'),
        ),
        migrations.AddField(
            model_name='biodatacode',
            name='page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='digitalization.generatedpage'),
        ),
    ]
